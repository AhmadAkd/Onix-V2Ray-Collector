name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # ÿßÿ¨ÿ±ÿß€å ÿÆŸàÿØ⁄©ÿßÿ± Ÿáÿ± 30 ÿØŸÇ€åŸÇŸá
    - cron: '*/30 * * * *'

permissions:
  contents: write
  pages: write
  id-token: write
  issues: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python run_tests.py

  collect-configs:
    name: Collect and Update Configs
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'schedule' || github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run collector
      run: |
        python config_collector.py
    
    - name: Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add subscriptions/
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        git commit -m "üîÑ Auto-update configs [$(date +'%Y-%m-%d %H:%M:%S')]"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        
        # ÿ™ŸÑÿßÿ¥ ÿ®ÿ±ÿß€å push ÿ®ÿß retry
        for i in {1..5}; do
          if git push origin main; then
            echo "‚úÖ Push successful"
            exit 0
          else
            echo "‚ö†Ô∏è Push failed, attempt $i/5"
            
            # Fetch latest changes
            git fetch origin main
            
            # Reset to remote and reapply our changes
            git reset --soft origin/main
            git add subscriptions/
            git commit --amend --no-edit || git commit -m "üîÑ Auto-update configs [$(date +'%Y-%m-%d %H:%M:%S')]"
            
            sleep 3
          fi
        done
        
        echo "‚ùå Push failed after 5 attempts"
        exit 1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t v2ray-collector:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm v2ray-collector:latest python run_tests.py

