name: V2Ray Config Collector & Tester

on:
  schedule:
    # هر 30 دقیقه اجرا شود
    - cron: '*/30 * * * *'
  workflow_dispatch:
  # push:
  #   branches: [ main ]  # غیرفعال - فقط با schedule و manual

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: v2ray-collection
  cancel-in-progress: false  # منتظر بماند تا workflow قبلی تمام شود

jobs:
  collect-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests aiohttp pyyaml schedule psutil flask
        
    - name: Create directories
      run: |
        mkdir -p subscriptions logs
        echo "📁 Directories created"
        ls -la
        
    - name: Run V2Ray Config Collector (Test)
      run: |
        echo "🧪 Testing config collector..."
        python -c "
        from config_collector import V2RayCollector
        import asyncio
        
        async def test():
            collector = V2RayCollector()
            print(f'📊 Sources count: {len(collector.config_sources)}')
            
            # Test a few sources
            test_sources = collector.config_sources[:5]
            for source in test_sources:
                try:
                    configs = await collector.fetch_configs_from_source(source)
                    print(f'✅ {source}: {len(configs)} configs')
                except Exception as e:
                    print(f'❌ {source}: Error - {e}')
        
        asyncio.run(test())
        "
        
    - name: Check for problematic sources
      run: |
        echo "🔍 Checking for problematic sources..."
        python -c "
        from config_collector import V2RayCollector
        collector = V2RayCollector()
        
        problematic_sources = []
        for source in collector.config_sources:
            if 'roosterkid/openproxylist' in source:
                problematic_sources.append(source)
        
        if problematic_sources:
            print('❌ Problematic sources found:')
            for source in problematic_sources:
                print(f'   - {source}')
            exit(1)
        else:
            print('✅ No problematic sources found')
        "
        
    - name: Generate subscription files
      run: |
        python -c "
        import asyncio
        import os
        import json
        from config_collector import V2RayCollector
        
        async def main():
            print('🚀 شروع جمع‌آوری و تست کانفیگ‌ها...')
            collector = V2RayCollector()
            
            # جمع‌آوری کانفیگ‌ها
            raw_configs = await collector.collect_all_configs()
            print(f'📥 {len(raw_configs)} کانفیگ جمع‌آوری شد')
            
            # تست کانفیگ‌ها با بهینه‌سازی فوق سریع
            await collector.test_all_configs(raw_configs, max_concurrent=100)
            print(f'✅ {len(collector.working_configs)} کانفیگ سالم، {len(collector.failed_configs)} ناسالم')
            
            # دسته‌بندی
            categories = collector.categorize_configs()
            
            # تولید فایل‌های اشتراک
            subscription_files = collector.generate_subscription_links(categories)
            
            # ذخیره فایل‌ها
            os.makedirs('subscriptions', exist_ok=True)
            
            for protocol, file_info in subscription_files.items():
                with open(file_info['filename'], 'w', encoding='utf-8') as f:
                    f.write(file_info['content'])
                print(f'📄 {file_info[\"filename\"]} - {file_info[\"count\"]} کانفیگ')
            
            # تولید گزارش
            report = collector.generate_report()
            with open('subscriptions/latest_report.json', 'w', encoding='utf-8') as f:
                json.dump(report, f, ensure_ascii=False, indent=2)
            
            print('🎉 تمام فایل‌ها با موفقیت تولید شدند')
        
        asyncio.run(main())
        "
        
    - name: Verify subscription files
      run: |
        echo "🔍 Checking subscription files..."
        if [ -d "subscriptions" ]; then
          echo "✅ subscriptions directory exists"
          ls -la subscriptions/
          if [ -f "subscriptions/all_subscription.txt" ]; then
            echo "✅ all_subscription.txt exists"
          else
            echo "❌ all_subscription.txt missing"
            echo "# Placeholder" > subscriptions/all_subscription.txt
          fi
        else
          echo "❌ subscriptions directory missing"
          mkdir -p subscriptions
          echo "# Placeholder" > subscriptions/all_subscription.txt
        fi
        
    - name: Create index page
      run: |
        cat > subscriptions/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="fa" dir="rtl">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>V2Ray Configs - کانفیگ‌های رایگان V2Ray</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }
                .container { max-width: 800px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                .header { text-align: center; color: #333; margin-bottom: 30px; }
                .protocol { margin: 20px 0; padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #007bff; }
                .protocol h3 { margin: 0 0 10px 0; color: #007bff; }
                .url { background: #e9ecef; padding: 10px; border-radius: 5px; font-family: monospace; word-break: break-all; }
                .copy-btn { background: #007bff; color: white; border: none; padding: 8px 15px; border-radius: 5px; cursor: pointer; margin-top: 10px; }
                .stats { background: #d4edda; padding: 15px; border-radius: 8px; margin-bottom: 20px; }
                .footer { text-align: center; margin-top: 30px; color: #666; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>🔒 V2Ray Config Collector</h1>
                    <p>کانفیگ‌های رایگان و تست شده V2Ray</p>
                </div>
                
                <div class="stats" id="stats">
                    <h3>📊 آمار سیستم</h3>
                    <p>آخرین به‌روزرسانی: <span id="lastUpdate">در حال بارگذاری...</span></p>
                    <p>کانفیگ‌های سالم: <span id="workingConfigs">-</span></p>
                    <p>نرخ موفقیت: <span id="successRate">-</span></p>
                </div>
                
                <div class="protocol">
                    <h3>📡 همه کانفیگ‌ها</h3>
                    <div class="url" id="allUrl">https://github.com/AhmadAkd/V2Ray_Collector/raw/main/subscriptions/all_subscription.txt</div>
                    <button class="copy-btn" onclick="copyToClipboard('allUrl')">📋 کپی لینک</button>
                </div>
                
                <div class="protocol">
                    <h3>🔵 VMess</h3>
                    <div class="url" id="vmessUrl">https://github.com/AhmadAkd/V2Ray_Collector/raw/main/subscriptions/vmess_subscription.txt</div>
                    <button class="copy-btn" onclick="copyToClipboard('vmessUrl')">📋 کپی لینک</button>
                </div>
                
                <div class="protocol">
                    <h3>🟢 VLESS</h3>
                    <div class="url" id="vlessUrl">https://github.com/AhmadAkd/V2Ray_Collector/raw/main/subscriptions/vless_subscription.txt</div>
                    <button class="copy-btn" onclick="copyToClipboard('vlessUrl')">📋 کپی لینک</button>
                </div>
                
                <div class="protocol">
                    <h3>🟡 Trojan</h3>
                    <div class="url" id="trojanUrl">https://github.com/AhmadAkd/V2Ray_Collector/raw/main/subscriptions/trojan_subscription.txt</div>
                    <button class="copy-btn" onclick="copyToClipboard('trojanUrl')">📋 کپی لینک</button>
                </div>
                
                <div class="protocol">
                    <h3>🟠 Shadowsocks</h3>
                    <div class="url" id="ssUrl">https://github.com/AhmadAkd/V2Ray_Collector/raw/main/subscriptions/ss_subscription.txt</div>
                    <button class="copy-btn" onclick="copyToClipboard('ssUrl')">📋 کپی لینک</button>
                </div>
                
                <div class="footer">
                    <p>🔄 این کانفیگ‌ها هر 30 دقیقه به‌روزرسانی می‌شوند</p>
                    <p>⚡ تمام کانفیگ‌ها تست شده و سالم هستند</p>
                    <p>📱 برای استفاده، لینک مورد نظر را در کلاینت V2Ray خود وارد کنید</p>
                </div>
            </div>
            
            <script>
                function copyToClipboard(elementId) {
                    const element = document.getElementById(elementId);
                    const text = element.textContent;
                    navigator.clipboard.writeText(text).then(function() {
                        alert('لینک کپی شد!');
                    });
                }
                
                // بارگذاری آمار
                fetch('latest_report.json')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('lastUpdate').textContent = data.timestamp || 'نامشخص';
                        document.getElementById('workingConfigs').textContent = data.working_configs || '0';
                        document.getElementById('successRate').textContent = data.success_rate || '0%';
                    })
                    .catch(error => {
                        console.error('خطا در بارگذاری آمار:', error);
                    });
            </script>
        </body>
        </html>
        EOF
        
    - name: Upload subscription files
      uses: actions/upload-artifact@v4
      with:
        name: v2ray-subscriptions
        path: subscriptions/
        if-no-files-found: error
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add subscriptions/
        git commit -m "Auto-update V2Ray configs $(date '+%Y-%m-%d %H:%M:%S')" || exit 0
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        git push origin main
