version: '3.8'

services:
  v2ray-collector:
    build: .
    container_name: v2ray-collector
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./subscriptions:/app/subscriptions
      - ./logs:/app/logs
      - ./backups:/app/backups
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Tehran
    command: python start.py
    networks:
      - v2ray-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  v2ray-automation:
    build: .
    container_name: v2ray-automation
    restart: unless-stopped
    volumes:
      - ./subscriptions:/app/subscriptions
      - ./logs:/app/logs
      - ./backups:/app/backups
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Tehran
    command: python automation.py --mode auto
    networks:
      - v2ray-network
    depends_on:
      - v2ray-collector

  nginx:
    image: nginx:alpine
    container_name: v2ray-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - v2ray-network
    depends_on:
      - v2ray-collector

networks:
  v2ray-network:
    driver: bridge

volumes:
  subscriptions:
  logs:
  backups:
